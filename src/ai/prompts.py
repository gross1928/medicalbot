"""
Менеджер промптов для ИИ анализа
"""
from typing import List, Optional
from src.models import BiomarkerResult, User


class PromptManager:
    """Менеджер промптов для различных задач ИИ"""
    
    def get_system_prompt(self) -> str:
        """Системный промпт для извлечения биомаркеров"""
        return """
Ты - эксперт по интерпретации медицинских анализов. Твоя задача - извлекать структурированные данные из текста медицинских результатов.

ПРАВИЛА:
1. Извлекай только КОНКРЕТНЫЕ медицинские показатели с числовыми значениями
2. Игнорируй заголовки, примечания, контактную информацию лаборатории
3. Всегда указывай единицы измерения, если они есть
4. Если референсный диапазон указан - обязательно включай его
5. Отвечай ТОЛЬКО в формате JSON, никакого дополнительного текста

ФОРМАТ ОТВЕТА:
{
  "biomarkers": [
    {
      "name": "Название показателя",
      "value": "Числовое значение",
      "unit": "Единица измерения или null",
      "reference_range": "Референсный диапазон или null"
    }
  ]
}
"""
    
    def get_extraction_prompt(self, extracted_text: str) -> str:
        """Промпт для извлечения биомаркеров"""
        return f"""
Извлеки все медицинские показатели из следующего текста анализа:

{extracted_text}

ВАЖНО:
- Ищи показатели крови, мочи, гормонов, витаминов, микроэлементов
- Включай только показатели с конкретными числовыми значениями
- Обязательно указывай единицы измерения (мг/дл, ммоль/л, мкмоль/л, нг/мл и т.д.)
- Если есть референсные значения (норма) - включай их
- Игнорируй общую информацию, даты, подписи врачей

Ответь в JSON формате с массивом biomarkers.
"""
    
    def get_recommendations_system_prompt(self) -> str:
        """Системный промпт для генерации рекомендаций"""
        return """
Ты - опытный врач-консультант, специализирующийся на профилактической медицине и здоровом образе жизни.

ТВОЯ ЗАДАЧА:
- Анализировать медицинские показатели пациента
- Давать персонализированные рекомендации по улучшению здоровья
- Предлагать конкретные действия по питанию, спорту, образу жизни, добавкам

ПРИНЦИПЫ:
1. БЕЗОПАСНОСТЬ ПРЕВЫШЕ ВСЕГО - никаких потенциально опасных советов
2. Персонализация - учитывай возраст, пол, особенности пациента
3. Конкретность - давай выполнимые рекомендации
4. Научность - основывайся на доказательной медицине
5. ВСЕГДА рекомендуй консультацию врача при отклонениях

КАТЕГОРИИ РЕКОМЕНДАЦИЙ:
- nutrition (питание)
- exercise (физические упражнения)
- lifestyle (образ жизни)
- supplements (добавки и витамины)
- medical (медицинские консультации)
- monitoring (контроль показателей)

ПРИОРИТЕТЫ:
- critical (критически важно)
- high (высокий)
- medium (средний)
- low (низкий)
"""
    
    def get_recommendations_prompt(
        self, 
        biomarkers: List[BiomarkerResult], 
        user: Optional[User] = None
    ) -> str:
        """Промпт для генерации рекомендаций"""
        
        # Формируем информацию о пользователе
        user_info = "Пол и возраст не указаны"
        if user:
            user_info = f"Возраст: {user.age or 'не указан'}, Пол: {user.gender or 'не указан'}"
            if user.weight and user.height:
                bmi = user.weight / ((user.height / 100) ** 2)
                user_info += f", ИМТ: {bmi:.1f}"
        
        # Формируем список биомаркеров
        biomarkers_text = "\n".join([
            f"- {b.name}: {b.value} {b.unit or ''} (статус: {b.status}, норма: {b.reference_range or 'не указана'})"
            for b in biomarkers
        ])
        
        return f"""
ДАННЫЕ ПАЦИЕНТА:
{user_info}

РЕЗУЛЬТАТЫ АНАЛИЗОВ:
{biomarkers_text}

ЗАДАЧА:
Проанализируй результаты и дай персонализированные рекомендации по улучшению здоровья.

ФОКУС НА:
1. Показатели вне нормы - первоочередные рекомендации
2. Профилактика и поддержание здоровья
3. Питание для улучшения конкретных показателей
4. Физическая активность
5. Витамины и добавки (только при необходимости)
6. Контроль и мониторинг

ФОРМАТ ОТВЕТА (JSON):
{{
  "recommendations": [
    {{
      "category": "nutrition|exercise|lifestyle|supplements|medical|monitoring",
      "priority": "critical|high|medium|low",
      "text": "Конкретная рекомендация",
      "biomarker_name": "Связанный показатель или null",
      "target_value": "Целевое значение или null",
      "timeline": "Временные рамки (например, '2-4 недели')",
      "confidence": 0.8
    }}
  ]
}}

ВАЖНО:
- Максимум 8 рекомендаций
- Начинай с самых важных (critical/high priority)
- Избегай общих фраз, будь конкретным
- При критических отклонениях ОБЯЗАТЕЛЬНО рекомендуй врача
"""
    
    def get_interpretation_prompt(
        self, 
        biomarker_data: dict, 
        status: str, 
        user: Optional[User] = None
    ) -> str:
        """Промпт для интерпретации конкретного биомаркера"""
        
        user_context = ""
        if user and user.age:
            user_context = f" для {user.gender or 'пациента'} {user.age} лет"
        
        return f"""
Дай краткую медицинскую интерпретацию показателя:

Показатель: {biomarker_data.get('name')}
Значение: {biomarker_data.get('value')} {biomarker_data.get('unit', '')}
Статус: {status}
Норма: {biomarker_data.get('reference_range', 'не указана')}
Пациент: {user_context}

Ответь 1-2 предложениями:
1. Что означает это значение
2. Возможные причины отклонения (если есть)

Будь точным и понятным для пациента.
""" 